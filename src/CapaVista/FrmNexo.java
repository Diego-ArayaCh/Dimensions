/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CapaVista;

import Animacion.Animacion;
import Animacion.Fade;
import CapaAccesoDatos.ArchivoContenidoAudioVisual;
import CapaAccesoDatos.ArchivoUsuarios;
import CapaAccesoDatos.PersistenciaUsuario;
import CapaLogica.AudioVisual;
import CapaLogica.Descarga;
import CapaLogica.Genero;
import CapaLogica.Idioma;
import CapaLogica.Moneda;
import CapaLogica.Pelicula;
import CapaLogica.Perfil;
import CapaLogica.Serie;
import CapaLogica.Usuario;
import java.awt.Color;
import java.awt.event.ItemEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import rojerusan.RSPanelsSlider;

/**
 *
 * @author Diego
 */
public class FrmNexo extends javax.swing.JFrame {

    int x;
    int y;
    TableRowSorter trs;
    /**
     * Creates new form FrmNexo
     */
    //Variables globales
    DefaultTableModel modeloTablaMantenimiento;
    Moneda moneda;
    ArrayList<Descarga> listaDescarga=new ArrayList();
    private Idioma idioma;
    DefaultListModel<Descarga> modeloReporte;
    DefaultTableModel modeloTablaReporte;
    public FrmNexo() {
        initComponents();
       jTblContenidos.getColumnModel().getColumn(0).setMaxWidth(0);
jTblContenidos.getColumnModel().getColumn(0).setMinWidth(0);
jTblContenidos.getColumnModel().getColumn(0).setPreferredWidth(0);
        Animacion.mover_derecha(Titulo.getX(), Titulo.getX()+650, 3, 5, Titulo);
        modeloTablaReporte= (DefaultTableModel)jTblReporte.getModel();
        modeloReporte=new DefaultListModel();
        modeloTablaMantenimiento = (DefaultTableModel) jTblContenidos.getModel();
        llenarComboGenero();
        jLstReporte.setModel(modeloReporte);
//         Fade.JFrameFadeIn(0, 1, 0.050f, 50, this);

        jLblPerfil.setText("Perfil: " + PersistenciaUsuario.perfilSeleccionado.getPerfil());
        jLblUsuario.setText("Usuario: " + PersistenciaUsuario.usuarioSeleccionado.getNombre());
        if (PersistenciaUsuario.usuarioSeleccionado.getNombre().equals("admin")) {
            jBtnMantenimiento.setEnabled(true);
        } else {
            //Desactivación de funcionalidades para no administradores
            jBtnMantenimiento.setEnabled(false);
            jBtnMantenimiento.setToolTipText("Sólo para admin");
            jBtnReporte.setEnabled(false);
            jBtnReporte.setToolTipText("Sólo para admin");

        }
        this.setLocationRelativeTo(null);
        jBtnOpciones.setContentAreaFilled(false);
        jPanel1.setBackground(new FrmInicio().getColorHover());
        jPnlContenidos.setSize(jLayeredPane1.getSize());
        jPnlMantenimiento.setSize(jLayeredPane1.getSize());
        jPnlReporte.setSize(jLayeredPane1.getSize());
        jPnlSeleccion.setSize(jLayeredPane1.getSize());

        jPnlContenidos.setLocation(jLayeredPane1.getLocation());
        jPnlMantenimiento.setLocation(jLayeredPane1.getLocation());
        jPnlReporte.setLocation(jLayeredPane1.getLocation());
        jPnlSeleccion.setLocation(jLayeredPane1.getLocation());

        jPnlContenidos.setVisible(false);
        jPnlMantenimiento.setVisible(false);
        jPnlReporte.setVisible(false);
        listaDescarga = new ArrayList();
        jBtnDescargar.setEnabled(false);
    jBtnModificar.setEnabled(false);
        jBtnConsultar.setEnabled(false);
        jBtnEliminar.setEnabled(false);
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLblUsuario = new javax.swing.JLabel();
        jLblPerfil = new javax.swing.JLabel();
        jBtnOpciones = new javax.swing.JButton();
        Titulo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jPnlMantenimiento = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTblContenidos = new rojerusan.RSTableMetro();
        jBtnModificar = new javax.swing.JButton();
        jBtnAgregar = new javax.swing.JButton();
        jBtnConsultar = new javax.swing.JButton();
        jBtnEliminar = new javax.swing.JButton();
        jPnlSeleccion = new javax.swing.JPanel();
        jBtnMantenimiento = new javax.swing.JButton();
        jBtnContenido = new javax.swing.JButton();
        jBtnReporte = new javax.swing.JButton();
        jPnlContenidos = new javax.swing.JPanel();
        jTxtBuscar = new org.jdesktop.swingx.JXSearchField();
        jBtnCarrito = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTblContenidos2 = new rojerusan.RSTableMetro();
        jRdbPelicula = new javax.swing.JRadioButton();
        jRdbSerie = new javax.swing.JRadioButton();
        jCboGenero = new org.bolivia.combo.SComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLblColones = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLblDolares = new javax.swing.JLabel();
        jBtnDescargar = new javax.swing.JButton();
        jPnlReporte = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTblReporte = new rojerusan.RSTableMetro();
        jPnlReporteDescargas = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jLstReporte = new javax.swing.JList<>();
        Colon = new javax.swing.JLabel();
        Dolar = new javax.swing.JLabel();
        jLblContPeliculas = new javax.swing.JLabel();
        jLblContSeries = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(51, 51, 255));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.setLayout(null);

        jLblUsuario.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLblUsuario.setForeground(new FrmInicio().getColorTextHover());
        jLblUsuario.setText("Usuario:            ");
        jPanel1.add(jLblUsuario);
        jLblUsuario.setBounds(846, 6, 155, 22);

        jLblPerfil.setFont(new java.awt.Font("Tahoma", 3, 16)); // NOI18N
        jLblPerfil.setForeground(new FrmInicio().getColorTextHover());
        jLblPerfil.setText("Perfil:            ");
        jPanel1.add(jLblPerfil);
        jLblPerfil.setBounds(816, 42, 140, 20);

        jBtnOpciones.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Sesion.png"))); // NOI18N
        jBtnOpciones.setOpaque(false);
        jBtnOpciones.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/sesion3.png"))); // NOI18N
        jBtnOpciones.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/sesion2.png"))); // NOI18N
        jBtnOpciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnOpcionesActionPerformed(evt);
            }
        });
        jPanel1.add(jBtnOpciones);
        jBtnOpciones.setBounds(1032, 29, 71, 80);

        Titulo.setBackground(new java.awt.Color(0, 0, 0));
        Titulo.setFont(new java.awt.Font("Palace Script MT", 1, 80)); // NOI18N
        Titulo.setForeground(new java.awt.Color(255, 255, 255));
        Titulo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Titulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/logo.png"))); // NOI18N
        Titulo.setToolTipText("");
        Titulo.setCursor(new java.awt.Cursor(java.awt.Cursor.MOVE_CURSOR));
        Titulo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                TituloMouseDragged(evt);
            }
        });
        Titulo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TituloMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TituloMousePressed(evt);
            }
        });
        jPanel1.add(Titulo);
        Titulo.setBounds(-280, 0, 346, 123);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/loading_1.gif"))); // NOI18N
        jLabel1.setText("Conectado");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(846, 76, 123, 33);

        jPnlMantenimiento.setBackground(new java.awt.Color(255, 255, 255));
        jPnlMantenimiento.setPreferredSize(new java.awt.Dimension(1079, 656));

        jTblContenidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Código", "Título", "Película", "Serie", "Calificación"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTblContenidos.setFuenteHead(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTblContenidos.setMultipleSeleccion(false);
        jTblContenidos.getTableHeader().setReorderingAllowed(false);
        jTblContenidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTblContenidosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTblContenidos);

        jBtnModificar.setForeground(new java.awt.Color(0, 0, 0));
        jBtnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/modify.png"))); // NOI18N
        jBtnModificar.setText("Modificar");
        jBtnModificar.setBorder(null);
        jBtnModificar.setContentAreaFilled(false);
        jBtnModificar.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/modifyUnabled.png"))); // NOI18N
        jBtnModificar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnModificar.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/modify (1).png"))); // NOI18N
        jBtnModificar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnModificarActionPerformed(evt);
            }
        });

        jBtnAgregar.setForeground(new java.awt.Color(0, 0, 0));
        jBtnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/add.png"))); // NOI18N
        jBtnAgregar.setText("Agregar");
        jBtnAgregar.setBorder(null);
        jBtnAgregar.setContentAreaFilled(false);
        jBtnAgregar.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/addUnabled.png"))); // NOI18N
        jBtnAgregar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnAgregar.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/add (1).png"))); // NOI18N
        jBtnAgregar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAgregarActionPerformed(evt);
            }
        });

        jBtnConsultar.setForeground(new java.awt.Color(0, 0, 0));
        jBtnConsultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/request.png"))); // NOI18N
        jBtnConsultar.setText("consultar");
        jBtnConsultar.setBorder(null);
        jBtnConsultar.setContentAreaFilled(false);
        jBtnConsultar.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/requestUnabled.png"))); // NOI18N
        jBtnConsultar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnConsultar.setPreferredSize(new java.awt.Dimension(64, 84));
        jBtnConsultar.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/request (1).png"))); // NOI18N
        jBtnConsultar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnConsultarActionPerformed(evt);
            }
        });

        jBtnEliminar.setForeground(new java.awt.Color(0, 0, 0));
        jBtnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Delete1.png"))); // NOI18N
        jBtnEliminar.setText("Eliminar");
        jBtnEliminar.setBorder(null);
        jBtnEliminar.setContentAreaFilled(false);
        jBtnEliminar.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/DeleteUnabled.png"))); // NOI18N
        jBtnEliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnEliminar.setPreferredSize(new java.awt.Dimension(64, 84));
        jBtnEliminar.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Delete2.png"))); // NOI18N
        jBtnEliminar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPnlMantenimientoLayout = new javax.swing.GroupLayout(jPnlMantenimiento);
        jPnlMantenimiento.setLayout(jPnlMantenimientoLayout);
        jPnlMantenimientoLayout.setHorizontalGroup(
            jPnlMantenimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlMantenimientoLayout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addGroup(jPnlMantenimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jBtnConsultar, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                    .addComponent(jBtnAgregar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtnModificar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                    .addComponent(jBtnEliminar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 808, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );
        jPnlMantenimientoLayout.setVerticalGroup(
            jPnlMantenimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlMantenimientoLayout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(jPnlMantenimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPnlMantenimientoLayout.createSequentialGroup()
                        .addComponent(jBtnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(jBtnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(jBtnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addComponent(jBtnConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jPnlSeleccion.setBackground(new java.awt.Color(255, 255, 255));
        jPnlSeleccion.setPreferredSize(new java.awt.Dimension(1109, 690));

        jBtnMantenimiento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/adjust.png"))); // NOI18N
        jBtnMantenimiento.setText("Mantenimiento");
        jBtnMantenimiento.setContentAreaFilled(false);
        jBtnMantenimiento.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/adjustUnabled.png"))); // NOI18N
        jBtnMantenimiento.setDisabledSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/adjustUnabled.png"))); // NOI18N
        jBtnMantenimiento.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnMantenimiento.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/adjust (1).png"))); // NOI18N
        jBtnMantenimiento.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtnMantenimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnMantenimientoActionPerformed(evt);
            }
        });

        jBtnContenido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/play-button.png"))); // NOI18N
        jBtnContenido.setText("Contenidos");
        jBtnContenido.setContentAreaFilled(false);
        jBtnContenido.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnContenido.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/play-button (1).png"))); // NOI18N
        jBtnContenido.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtnContenido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnContenidoActionPerformed(evt);
            }
        });

        jBtnReporte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/report.png"))); // NOI18N
        jBtnReporte.setText("Reporte");
        jBtnReporte.setContentAreaFilled(false);
        jBtnReporte.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/reportUnabledpng.png"))); // NOI18N
        jBtnReporte.setDisabledSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/reportUnabledpng.png"))); // NOI18N
        jBtnReporte.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnReporte.setPreferredSize(new java.awt.Dimension(111, 97));
        jBtnReporte.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/report (1).png"))); // NOI18N
        jBtnReporte.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtnReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnReporteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPnlSeleccionLayout = new javax.swing.GroupLayout(jPnlSeleccion);
        jPnlSeleccion.setLayout(jPnlSeleccionLayout);
        jPnlSeleccionLayout.setHorizontalGroup(
            jPnlSeleccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlSeleccionLayout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(jBtnMantenimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(159, 159, 159)
                .addComponent(jBtnContenido, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(117, 117, 117)
                .addComponent(jBtnReporte, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(141, Short.MAX_VALUE))
        );
        jPnlSeleccionLayout.setVerticalGroup(
            jPnlSeleccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlSeleccionLayout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addGroup(jPnlSeleccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtnReporte, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPnlSeleccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jBtnMantenimiento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtnContenido, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(463, Short.MAX_VALUE))
        );

        jPnlContenidos.setBackground(new java.awt.Color(255, 255, 255));
        jPnlContenidos.setPreferredSize(new java.awt.Dimension(1079, 656));
        jPnlContenidos.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPnlContenidosMouseMoved(evt);
            }
        });
        jPnlContenidos.setLayout(null);

        jTxtBuscar.setToolTipText("Título");
        jTxtBuscar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jTxtBuscar.setOpaque(false);
        jTxtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTxtBuscarKeyTyped(evt);
            }
        });
        jPnlContenidos.add(jTxtBuscar);
        jTxtBuscar.setBounds(-290, 140, 332, 47);
        jTxtBuscar.getAccessibleContext().setAccessibleName("Título");

        jBtnCarrito.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/supermarket.png"))); // NOI18N
        jBtnCarrito.setText("Carrito");
        jBtnCarrito.setContentAreaFilled(false);
        jBtnCarrito.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/shopping-cart.png"))); // NOI18N
        jBtnCarrito.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnCarrito.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/supermarket (1).png"))); // NOI18N
        jBtnCarrito.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtnCarrito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCarritoActionPerformed(evt);
            }
        });
        jPnlContenidos.add(jBtnCarrito);
        jBtnCarrito.setBounds(910, 350, 150, 120);

        jTblContenidos2.setModel(jTblContenidos.getModel());
        jTblContenidos2.setFuenteHead(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTblContenidos2.setMultipleSeleccion(false);
        jTblContenidos2.getTableHeader().setReorderingAllowed(false);
        jTblContenidos2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTblContenidos2FocusGained(evt);
            }
        });
        jTblContenidos2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTblContenidos2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTblContenidos2);

        jPnlContenidos.add(jScrollPane2);
        jScrollPane2.setBounds(0, 630, 808, 403);

        buttonGroup1.add(jRdbPelicula);
        jRdbPelicula.setText("Película");
        jRdbPelicula.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRdbPeliculaItemStateChanged(evt);
            }
        });
        jRdbPelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRdbPeliculaActionPerformed(evt);
            }
        });
        jPnlContenidos.add(jRdbPelicula);
        jRdbPelicula.setBounds(807, 44, 77, 28);

        buttonGroup1.add(jRdbSerie);
        jRdbSerie.setText("Serie");
        jRdbSerie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRdbSerieActionPerformed(evt);
            }
        });
        jPnlContenidos.add(jRdbSerie);
        jRdbSerie.setBounds(923, 44, 62, 28);

        jCboGenero.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCboGeneroItemStateChanged(evt);
            }
        });
        jPnlContenidos.add(jCboGenero);
        jCboGenero.setBounds(882, 211, 200, 32);

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Búsqueda por título");
        jPnlContenidos.add(jLabel2);
        jLabel2.setBounds(86, 107, 139, 19);

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Precio total  en ¢: ");
        jPnlContenidos.add(jLabel3);
        jLabel3.setBounds(403, 25, 126, 19);
        jPnlContenidos.add(jLblColones);
        jLblColones.setBounds(541, 25, 60, 19);

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Precio total  en $: ");
        jPnlContenidos.add(jLabel4);
        jLabel4.setBounds(403, 44, 126, 43);
        jPnlContenidos.add(jLblDolares);
        jLblDolares.setBounds(541, 57, 82, 19);

        jBtnDescargar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Download1.png"))); // NOI18N
        jBtnDescargar.setText("Descargar");
        jBtnDescargar.setContentAreaFilled(false);
        jBtnDescargar.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/DownloadUnabled.png"))); // NOI18N
        jBtnDescargar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnDescargar.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Download1 (1).png"))); // NOI18N
        jBtnDescargar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtnDescargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnDescargarActionPerformed(evt);
            }
        });
        jPnlContenidos.add(jBtnDescargar);
        jBtnDescargar.setBounds(917, 566, 150, 120);

        jPnlReporte.setBackground(new java.awt.Color(255, 255, 255));
        jPnlReporte.setPreferredSize(new java.awt.Dimension(1079, 656));
        jPnlReporte.setLayout(null);

        jTblReporte.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Título", "Género", "Descargas", "Calificación"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jTblReporte);

        jPnlReporte.add(jScrollPane5);
        jScrollPane5.setBounds(70, 70, 466, 378);

        jPnlReporteDescargas.setBackground(new FrmInicio().getColorHover());

        jScrollPane3.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane3.setForeground(new java.awt.Color(0, 0, 0));

        jLstReporte.setBackground(new FrmInicio().getColorPressed());
        jLstReporte.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLstReporte.setForeground(new FrmInicio().getColorTextPressed());
        jLstReporte.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(jLstReporte);

        Colon.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        Colon.setForeground(new java.awt.Color(255, 255, 255));

        Dolar.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        Dolar.setForeground(new java.awt.Color(255, 255, 255));

        jLblContPeliculas.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLblContPeliculas.setForeground(new java.awt.Color(255, 255, 255));
        jLblContPeliculas.setText("Películas:");

        jLblContSeries.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLblContSeries.setForeground(new java.awt.Color(255, 255, 255));
        jLblContSeries.setText("Series: ");

        javax.swing.GroupLayout jPnlReporteDescargasLayout = new javax.swing.GroupLayout(jPnlReporteDescargas);
        jPnlReporteDescargas.setLayout(jPnlReporteDescargasLayout);
        jPnlReporteDescargasLayout.setHorizontalGroup(
            jPnlReporteDescargasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlReporteDescargasLayout.createSequentialGroup()
                .addGroup(jPnlReporteDescargasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPnlReporteDescargasLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPnlReporteDescargasLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPnlReporteDescargasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Dolar, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                            .addComponent(Colon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(59, 59, 59)
                        .addGroup(jPnlReporteDescargasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLblContPeliculas)
                            .addComponent(jLblContSeries))))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        jPnlReporteDescargasLayout.setVerticalGroup(
            jPnlReporteDescargasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlReporteDescargasLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 107, Short.MAX_VALUE)
                .addGroup(jPnlReporteDescargasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Colon, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLblContPeliculas))
                .addGap(18, 18, 18)
                .addGroup(jPnlReporteDescargasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Dolar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLblContSeries))
                .addGap(64, 64, 64))
        );

        jPnlReporte.add(jPnlReporteDescargas);
        jPnlReporteDescargas.setBounds(630, 70, 442, 511);

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Registro de Descargas");
        jPnlReporte.add(jLabel6);
        jLabel6.setBounds(706, 20, 258, 32);

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Registro de Contenidos");
        jPnlReporte.add(jLabel7);
        jLabel7.setBounds(187, 33, 272, 32);

        jLayeredPane1.setLayer(jPnlMantenimiento, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jPnlSeleccion, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jPnlContenidos, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jPnlReporte, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1109, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPnlReporte, javax.swing.GroupLayout.DEFAULT_SIZE, 1109, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPnlMantenimiento, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1109, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPnlSeleccion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPnlContenidos, javax.swing.GroupLayout.DEFAULT_SIZE, 1109, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 641, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPnlReporte, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 697, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPnlMantenimiento, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 697, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPnlSeleccion, javax.swing.GroupLayout.DEFAULT_SIZE, 697, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPnlContenidos, javax.swing.GroupLayout.DEFAULT_SIZE, 697, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLayeredPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPane1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened


    }//GEN-LAST:event_formWindowOpened

    private void jBtnOpcionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnOpcionesActionPerformed
        JOption opciones = new JOption(this, true);
        opciones.setLocationRelativeTo(JOptionPane.getRootFrame());
        opciones.setVisible(true);
    }//GEN-LAST:event_jBtnOpcionesActionPerformed
//Movimiento de pantalla
    private void TituloMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TituloMousePressed
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_TituloMousePressed

    private void TituloMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TituloMouseDragged
        this.setLocation(this.getLocation().x + evt.getX() - x, this.getLocation().y + evt.getY() - y);
    }//GEN-LAST:event_TituloMouseDragged

    private void jBtnContenidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnContenidoActionPerformed
        jPnlContenidos.setVisible(true);

        jPnlMantenimiento.setVisible(false);

        jPnlReporte.setVisible(false);
        jPnlSeleccion.setVisible(false);
        ActualizarTablaMantenimiento();
        Animacion.mover_derecha(jTxtBuscar.getX(), jTxtBuscar.getX() + 350, 3, 5, jTxtBuscar);
        Animacion.subir(jScrollPane2.getY(), jScrollPane2.getY() - 400, 1, 5, jScrollPane2);
        jBtnCarrito.setEnabled(false);
    }//GEN-LAST:event_jBtnContenidoActionPerformed

    private void jBtnMantenimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnMantenimientoActionPerformed
        jPnlMantenimiento.setVisible(true);

        jPnlContenidos.setVisible(false);
        jPnlReporte.setVisible(false);
        jPnlSeleccion.setVisible(false);
        ActualizarTablaMantenimiento();
    }//GEN-LAST:event_jBtnMantenimientoActionPerformed
public void transicion(){
        Animacion.subir(jPnlReporteDescargas.getY(), jPnlReporteDescargas.getY()-555, 1, 5, jPnlReporteDescargas);
         Animacion.mover_derecha(jScrollPane5.getX(), jScrollPane5.getX()+470, 1, 5, jScrollPane5);
}
    private void jBtnReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnReporteActionPerformed
       jPnlReporte.setVisible(true);
//       transicion();
        jPnlMantenimiento.setVisible(false);
        jPnlContenidos.setVisible(false);
       
        jPnlSeleccion.setVisible(false);
        
       
    
     
        try {
//               PersistenciaUsuario.actualizarPerfil();
//            PersistenciaUsuario.cerrarSesion();
        } catch (Exception ex) {
            Logger.getLogger(FrmNexo.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        actualizarTablaReportes();
        try {
            actualizarListaReportes();
        } catch (Exception ex) {
            Logger.getLogger(FrmNexo.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        
    }//GEN-LAST:event_jBtnReporteActionPerformed
//Modificar
    private void jBtnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnModificarActionPerformed

        //Modifica contenido
        try {

            JDialogMantenimiento mantenimiento = new JDialogMantenimiento(this, true);
            mantenimiento.setLocationRelativeTo(this);
            String codigo = jTblContenidos.getValueAt(jTblContenidos.getSelectedRow(), 0).toString();
            mantenimiento.modificar(codigo);
            mantenimiento.setVisible(true);
        } catch (Exception e) {
            JDialogNotification not = new JDialogNotification(this, true, "Seleccione el contenido en la tabla que desea consultar");
            not.setLocationRelativeTo(JOptionPane.getRootFrame());

            not.setVisible(true);
        }


    }//GEN-LAST:event_jBtnModificarActionPerformed
//Consultar
    private void jBtnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnConsultarActionPerformed
        AudioVisual contenido = null;

        try {

            contenido = ArchivoContenidoAudioVisual.getInstance().consultarAudioVisual(jTblContenidos.getValueAt(jTblContenidos.getSelectedRow(), 0).toString());
            JDialogShowText showMessege = new JDialogShowText(this, true, contenido.toString());
            showMessege.setLocationRelativeTo(null);
            showMessege.setVisible(true);

        } catch (Exception ex) {
            JDialogNotification not = new JDialogNotification(this, true, "Seleccione el contenido en la tabla que desea modificar");
            not.setLocationRelativeTo(JOptionPane.getRootFrame());
            
            not.setVisible(true);
        }


    }//GEN-LAST:event_jBtnConsultarActionPerformed
//Agregar
    private void jBtnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAgregarActionPerformed
        //Agrega un objeto al archivoContenidoAudioVisual
        JDialogMantenimiento mantenimiento = new JDialogMantenimiento(this, true);
        mantenimiento.setLocationRelativeTo(this);
        mantenimiento.setVisible(true);


    }//GEN-LAST:event_jBtnAgregarActionPerformed
//Eliminar
    private void jBtnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEliminarActionPerformed
        try {
            ArchivoContenidoAudioVisual.getInstance().eliminarAudioVisual(jTblContenidos.getValueAt(jTblContenidos.getSelectedRow(), 0).toString());

            ActualizarTablaMantenimiento();
        } catch (Exception e) {
            JDialogNotification not = new JDialogNotification(this, true, "Seleccione el contenido en la tabla que desea eliminar");
            not.setLocationRelativeTo(JOptionPane.getRootFrame());

            not.setVisible(true);
        }
        if(jTblContenidos.getSelectedRow()==-1){
             jBtnModificar.setEnabled(false);
        jBtnConsultar.setEnabled(false);
        jBtnEliminar.setEnabled(false);
        }
    }//GEN-LAST:event_jBtnEliminarActionPerformed
    //búsqueda
    TableRowSorter filtro;
    public void Filtro(){
        int columna=1;
        filtro.setRowFilter(RowFilter.regexFilter(jTxtBuscar.getText(), columna));
        
        
    }
    private void jTxtBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtBuscarKeyTyped

//        try {
//
//            jTxtBuscar.addKeyListener(new KeyAdapter() {
//                @Override
//                public void keyReleased(final KeyEvent ke) {
//                    try {
//
//                        trs.setRowFilter(RowFilter.regexFilter(jTxtBuscar.getText(), 1));
//                    } catch (Exception e) {
//                        JDialogNotification not = new JDialogNotification(new FrmNexo(), true, "Expresión no permitida");
//                        not.setLocationRelativeTo(JOptionPane.getRootFrame());
//
//                        not.setVisible(true);
//                    }
//                }
//
//            });
//
//            trs = new TableRowSorter(modeloTablaMantenimiento);
//            jTblContenidos2.setRowSorter(trs);
//
//        } catch (Exception e) {
//            JDialogNotification not = new JDialogNotification(this, true, "No hay coincidencias");
//            not.setLocationRelativeTo(JOptionPane.getRootFrame());
//
//            not.setVisible(true);
//        }



jTxtBuscar.addKeyListener(new KeyAdapter() {
    
    public void keyReleased(final KeyEvent e){
        String cadena = (jTxtBuscar.getText());
        if(cadena.equals("")){
            ActualizarTablaMantenimiento();
        }else{
        jTxtBuscar.setText(cadena);
        Filtro();
        
        }
    }
    
});
filtro=new TableRowSorter(modeloTablaMantenimiento);
jTblContenidos2.setRowSorter(filtro);
    }//GEN-LAST:event_jTxtBuscarKeyTyped

    private void jRdbPeliculaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRdbPeliculaItemStateChanged
       if (jTblContenidos2.getSelectedRow() == -1) {
            jBtnDescargar.setEnabled(false);

            jLblDolares.setText("");
            jLblColones.setText("");

        } else {
            jBtnDescargar.setEnabled(true);
        }

        if (listaDescarga.isEmpty()) {
            jBtnCarrito.setEnabled(false);

        } else {
            jBtnCarrito.setEnabled(true);
        }
    }//GEN-LAST:event_jRdbPeliculaItemStateChanged

    private void jRdbPeliculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRdbPeliculaActionPerformed

        if (jRdbPelicula.isSelected()) {
            modeloTablaMantenimiento.setRowCount(0);
            Object[] arrayObjeto = null;
            try {
                for (AudioVisual contenido : ArchivoContenidoAudioVisual.getInstance().listaAudiovisuales()) {
                    if (contenido instanceof Pelicula) {
                        arrayObjeto = new Object[5];
                        arrayObjeto[0] = contenido.getCodigo();
                        arrayObjeto[1] = contenido.getTitulo();
                        arrayObjeto[2] = (contenido instanceof Pelicula) ? true : false;
                        arrayObjeto[3] = (contenido instanceof Serie) ? true : false;
                          arrayObjeto[4]= contenido.getCalificacion();
                           jTblContenidos2.getColumnModel().getColumn(0).setMaxWidth(0);
jTblContenidos2.getColumnModel().getColumn(0).setMinWidth(0);
jTblContenidos2.getColumnModel().getColumn(0).setPreferredWidth(0);
                        modeloTablaMantenimiento.addRow(arrayObjeto);
                    }
                }
            } catch (Exception ex) {
                Logger.getLogger(FrmNexo.class.getName()).log(Level.SEVERE, null, ex);
                return;
            }

        } else {
            ActualizarTablaMantenimiento();
        }


    }//GEN-LAST:event_jRdbPeliculaActionPerformed

    private void jRdbSerieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRdbSerieActionPerformed
        if (jRdbSerie.isSelected()) {
            modeloTablaMantenimiento.setRowCount(0);
            Object[] arrayObjeto = null;
            try {
                for (AudioVisual contenido : ArchivoContenidoAudioVisual.getInstance().listaAudiovisuales()) {
                    if (contenido instanceof Serie) {
                        arrayObjeto = new Object[5];
                        arrayObjeto[0] = contenido.getCodigo();
                        arrayObjeto[1] = contenido.getTitulo();
                        arrayObjeto[2] = (contenido instanceof Pelicula) ? true : false;
                        arrayObjeto[3] = (contenido instanceof Serie) ? true : false;
                          arrayObjeto[4]= contenido.getCalificacion();
                           jTblContenidos2.getColumnModel().getColumn(0).setMaxWidth(0);
jTblContenidos2.getColumnModel().getColumn(0).setMinWidth(0);
jTblContenidos2.getColumnModel().getColumn(0).setPreferredWidth(0);
                        modeloTablaMantenimiento.addRow(arrayObjeto);
                    }
                }
            } catch (Exception ex) {
                Logger.getLogger(FrmNexo.class.getName()).log(Level.SEVERE, null, ex);
                return;
            }

        } else {
            ActualizarTablaMantenimiento();
        }


    }//GEN-LAST:event_jRdbSerieActionPerformed

    private void jCboGeneroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCboGeneroItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            modeloTablaMantenimiento.setRowCount(0);
            Object[] arrayObjeto = null;
            try {
                for (AudioVisual contenido : ArchivoContenidoAudioVisual.getInstance().listaAudiovisuales()) {
                    if (contenido.getGenero().equals((Genero) jCboGenero.getSelectedItem())) {
                        arrayObjeto = new Object[5];
                        arrayObjeto[0] = contenido.getCodigo();
                        arrayObjeto[1] = contenido.getTitulo();
                        arrayObjeto[2] = (contenido instanceof Pelicula) ? true : false;
                        arrayObjeto[3] = (contenido instanceof Serie) ? true : false;
                        arrayObjeto[4]= contenido.getCalificacion();
                         jTblContenidos2.getColumnModel().getColumn(0).setMaxWidth(0);
jTblContenidos2.getColumnModel().getColumn(0).setMinWidth(0);
jTblContenidos2.getColumnModel().getColumn(0).setPreferredWidth(0);
                        modeloTablaMantenimiento.addRow(arrayObjeto);
                    }
                }
            } catch (Exception ex) {
                Logger.getLogger(FrmNexo.class.getName()).log(Level.SEVERE, null, ex);
                return;
            }

        }
    }//GEN-LAST:event_jCboGeneroItemStateChanged
//Obtener precio de los contenidos
    private void jTblContenidos2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTblContenidos2MouseClicked
        if (jTblContenidos2.getSelectedRow() >= 0) {
            jBtnDescargar.setEnabled(true);
            try {
                AudioVisual contenido = ArchivoContenidoAudioVisual.getInstance().consultarAudioVisual(jTblContenidos2.getValueAt(jTblContenidos2.getSelectedRow(), 0).toString());
                   jLblDolares.setText(contenido.costoTotal() + "");
            jLblColones.setText(contenido.costoTotal() * Moneda.Colones.getCambio() + "");
                if (evt.getClickCount() == 2) {
                      JDialogShowText showMessege = new JDialogShowText(this, true, contenido.toString());
            showMessege.setLocationRelativeTo(null);
            showMessege.setVisible(true);
                 

                }
                if (evt.getClickCount() == 1) {

                }
            } catch (Exception ex) {
                Logger.getLogger(FrmNexo.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_jTblContenidos2MouseClicked

    private void jBtnCarritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCarritoActionPerformed

//        try {
        JDialogShowList carrito = new JDialogShowList(this, true, listaDescarga);
        carrito.setLocationRelativeTo(this);
        carrito.setVisible(true);
//        } catch (Exception e) {
//            JDialogNotification not = new JDialogNotification(this, true, "No hay descargas");
//            not.setLocationRelativeTo(this);
//            not.setVisible(true);
//            System.out.println(e.toString());
//        }


    }//GEN-LAST:event_jBtnCarritoActionPerformed

    private void jTblContenidos2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTblContenidos2FocusGained
        jBtnDescargar.setEnabled(true);

        try {
            AudioVisual contenido = ArchivoContenidoAudioVisual.getInstance().consultarAudioVisual(jTblContenidos2.getValueAt(jTblContenidos2.getSelectedRow(), 0).toString());

            jLblDolares.setText(contenido.costoTotal() + "");
            jLblColones.setText(contenido.costoTotal() * Moneda.Colones.getCambio() + "");

        } catch (Exception ex) {
            Logger.getLogger(FrmNexo.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jTblContenidos2FocusGained

    private void jPnlContenidosMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPnlContenidosMouseMoved

        if (jTblContenidos2.getSelectedRow() == -1) {
            jBtnDescargar.setEnabled(false);

            jLblDolares.setText("");
            jLblColones.setText("");

        } else {
            jBtnDescargar.setEnabled(true);
        }

        if (listaDescarga.isEmpty()) {
            jBtnCarrito.setEnabled(false);

        } else {
            jBtnCarrito.setEnabled(true);
        }
    }//GEN-LAST:event_jPnlContenidosMouseMoved

    private void jBtnDescargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnDescargarActionPerformed

        try {
            Descarga descarga = new Descarga(ArchivoContenidoAudioVisual.getInstance().consultarAudioVisual(jTblContenidos2.getValueAt(jTblContenidos2.getSelectedRow(), 0).toString()));

            if (!isRepetido(descarga.getContenidoDescargado().getCodigo())) {

//             JDialogMoneda seleccionMoneda=new JDialogMoneda(this, true);
//      seleccionMoneda.setLocationRelativeTo(this);
//      seleccionMoneda.setVisible(true);
              
                //Idioma de la descarga
                JDialogIdioma seleccionIdioma = new JDialogIdioma(this, true, descarga);

                seleccionIdioma.setLocationRelativeTo(this);
                seleccionIdioma.setVisible(true);
                descarga.setIdioma(idioma);
                String user=PersistenciaUsuario.usuarioSeleccionado.getNombre();
                descarga.setUser(user);
                listaDescarga.add(descarga);
             
                JDialogNotification not = new JDialogNotification(this, true, "Descarga añadida con éxito");
                not.setLocationRelativeTo(this);
                not.setVisible(true);

            } else {
                JDialogNotification not = new JDialogNotification(this, true, "Este contenido ya se añadió");
                not.setLocationRelativeTo(this);
                not.setColores(Color.red, Color.white);
                not.setVisible(true);
                return;

            }
        } catch (Exception ex) {
            Logger.getLogger(FrmNexo.class.getName()).log(Level.SEVERE, null, ex);
        }
        jBtnCarrito.setEnabled(true);

    }//GEN-LAST:event_jBtnDescargarActionPerformed

    private void TituloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TituloMouseClicked
        
        if(evt.getClickCount()==2){
                     this.setExtendedState(ICONIFIED);
        }
        
        
    }//GEN-LAST:event_TituloMouseClicked

    private void jTblContenidosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTblContenidosMouseClicked
      if( jTblContenidos.getSelectedRow() >= 0){
        
        jBtnModificar.setEnabled(true);
        jBtnConsultar.setEnabled(true);
        jBtnEliminar.setEnabled(true);
        
    }
    }//GEN-LAST:event_jTblContenidosMouseClicked
    public void ActualizarTablaMantenimiento() {
        modeloTablaMantenimiento.setRowCount(0);
        Object[] arrayObjeto = null;
        try {
            for (AudioVisual contenido : ArchivoContenidoAudioVisual.getInstance().listaAudiovisuales()) {
                arrayObjeto = new Object[5];
                arrayObjeto[0] = contenido.getCodigo();
                arrayObjeto[1] = contenido.getTitulo();
                arrayObjeto[2] = (contenido instanceof Pelicula) ? true : false;
                arrayObjeto[3] = (contenido instanceof Serie) ? true : false;
                arrayObjeto[4]= contenido.getCalificacion();
                  jTblContenidos.getColumnModel().getColumn(0).setMaxWidth(0);
jTblContenidos.getColumnModel().getColumn(0).setMinWidth(0);
jTblContenidos.getColumnModel().getColumn(0).setPreferredWidth(0);
                modeloTablaMantenimiento.addRow(arrayObjeto);
            }
        } catch (Exception ex) {
            Logger.getLogger(FrmNexo.class.getName()).log(Level.SEVERE, null, ex);
            return;
        }

    }

    public void setMoneda(Moneda moneda) {
        this.moneda = moneda;

    }
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(FrmNexo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(FrmNexo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(FrmNexo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(FrmNexo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new FrmNexo().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Colon;
    private javax.swing.JLabel Dolar;
    private javax.swing.JLabel Titulo;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jBtnAgregar;
    private javax.swing.JButton jBtnCarrito;
    private javax.swing.JButton jBtnConsultar;
    private javax.swing.JButton jBtnContenido;
    private javax.swing.JButton jBtnDescargar;
    private javax.swing.JButton jBtnEliminar;
    private javax.swing.JButton jBtnMantenimiento;
    private javax.swing.JButton jBtnModificar;
    private javax.swing.JButton jBtnOpciones;
    private javax.swing.JButton jBtnReporte;
    private org.bolivia.combo.SComboBox jCboGenero;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLabel jLblColones;
    private javax.swing.JLabel jLblContPeliculas;
    private javax.swing.JLabel jLblContSeries;
    private javax.swing.JLabel jLblDolares;
    private javax.swing.JLabel jLblPerfil;
    private javax.swing.JLabel jLblUsuario;
    private javax.swing.JList<Descarga> jLstReporte;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPnlContenidos;
    private javax.swing.JPanel jPnlMantenimiento;
    private javax.swing.JPanel jPnlReporte;
    private javax.swing.JPanel jPnlReporteDescargas;
    private javax.swing.JPanel jPnlSeleccion;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JRadioButton jRdbPelicula;
    private javax.swing.JRadioButton jRdbSerie;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private rojerusan.RSTableMetro jTblContenidos;
    private rojerusan.RSTableMetro jTblContenidos2;
    private rojerusan.RSTableMetro jTblReporte;
    private org.jdesktop.swingx.JXSearchField jTxtBuscar;
    // End of variables declaration//GEN-END:variables

    public JPanel getjPnlSeleccion() {
        return jPnlSeleccion;
    }

    public JPanel getjPnlContenidos() {
        return jPnlContenidos;
    }

    public JPanel getjPnlMantenimiento() {
        return jPnlMantenimiento;
    }

    public JPanel getjPnlReporte() {
        return jPnlReporte;
    }

    private void llenarComboGenero() {
        for (Genero value : Genero.values()) {
            jCboGenero.addItem(value);
        }
    }

    public void activarMenu() {
        getjPnlSeleccion().setVisible(true);
        getjPnlContenidos().setVisible(false);
        getjPnlMantenimiento().setVisible(false);
        getjPnlReporte().setVisible(false);
        jRdbPelicula.setSelected(false);
        jRdbSerie.setSelected(false);
        jTxtBuscar.setText("");
        jCboGenero.setSelectedIndex(0);
        buttonGroup1.clearSelection();
//    Animacion.mover_izquierda(jTxtBuscar.getX(), jTxtBuscar.getX()-350, 10, 5,jTxtBuscar);
        if (jTxtBuscar.getX() != -290) {
            jTxtBuscar.setLocation(jTxtBuscar.getX() - 350, jTxtBuscar.getY());
            jScrollPane2.setLocation(jScrollPane2.getX(), jScrollPane2.getY() + 400);
        }
        jBtnModificar.setEnabled(false);
        jBtnConsultar.setEnabled(false);
        jBtnEliminar.setEnabled(false);
     
    }

    public void setListaDescarga(ArrayList<Descarga> listaDescarga) {
        this.listaDescarga = listaDescarga;
      
    }

    public boolean isRepetido(String codigo) {
        for (Descarga descarga : listaDescarga) {
            if (descarga.getContenidoDescargado().getCodigo().equals(codigo)) {
                return true;
            }
        }

        return false;

    }

    void SetIdioma(Idioma idioma) {
        this.idioma = idioma;
    }
   public void statusjBtnCarrito(boolean x){
       jBtnCarrito.setEnabled(x);
   }
   public Moneda getMoneda(){
       return moneda;
   }
   public void reiniciarCarrito(){
      listaDescarga=new ArrayList();
       
       
   }

    private void actualizarTablaReportes() {
         modeloTablaReporte.setRowCount(0);
        Object[] arrayObjeto = null;
        try {
            for (AudioVisual contenido : ArchivoContenidoAudioVisual.getInstance().listaAudiovisuales()) {
                arrayObjeto = new Object[4];
                arrayObjeto[0] = contenido.getTitulo();
                arrayObjeto[1] = contenido.getGenero();
                arrayObjeto[2] = contenido.getCantidadDescargas();
                arrayObjeto[3] = contenido.getCalificacion();
             
                modeloTablaReporte.addRow(arrayObjeto);
            }
        } catch (Exception ex) {
            Logger.getLogger(FrmNexo.class.getName()).log(Level.SEVERE, null, ex);
            return;
        }




    }

    private void actualizarListaReportes() throws Exception {
     modeloReporte.clear();
     int contadorSeries=0;
     int contadorPeliculas=0;
     double montoTotalDolares=0;
     double montoTotalColones=0.0;
     ArrayList<Usuario> users=ArchivoUsuarios.getInstance().listaUsuarios();
        for (Usuario user : users) {
          
            for (Perfil perfil : user.getArrayPerfil()) {
              
                for (Descarga descarga : perfil.getArrayDescargas()) {
                    modeloReporte.addElement(descarga);
                    montoTotalDolares+=descarga.getContenidoDescargado().costoTotal();
                   
                    if(descarga.getContenidoDescargado() instanceof Pelicula){
                        contadorPeliculas++;
                    }else{
                        contadorSeries++;
                    }
                    
                    
                }
                
                
                
                
            }
            
            
            
            
            
            
        }
        jLstReporte.setModel(modeloReporte);
        montoTotalColones=montoTotalDolares*Moneda.Colones.getCambio();
       
        Colon.setText("Monto total en ¢ :"+montoTotalColones);
        Dolar.setText("Monto total en $ :"+montoTotalDolares);
        jLblContPeliculas.setText("Películas :"+contadorPeliculas);
        jLblContSeries.setText("Series :"+contadorSeries);
        
        
    }
}
